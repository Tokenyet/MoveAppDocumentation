openapi: "3.0.0"
info:
  version: 1.0.0
  title: Move App Api
  description: MoveApp 開發用 Api，搭配 OpenApi 3.0 來進行文件撰寫。
  termsOfService: http://swagger.io/terms/
  contact:
    name: BCC
    email: info@bravocareercenter.com
    url: https://www.bravocareercenter.com/
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.htm
servers:
  - url: http://localhost:8080/api/
    description: Local Development server
  - url: http://localhost/mvapp/api
  - url: https://localhost/mvapp/api
tags:
  - name: "verification"
    description: "簡訊驗證資料"
    externalDocs:
      description: "Find out more"
      url: "http://localhost"
  - name: "user"
    description: "使用者資料"
    externalDocs:
      description: "Find out more"
      url: "http://localhost"
  - name: "order"
    description: "訂單資料" #Index: 訂單編號, UserId, CompanyId 使用 RoomDetail MoveDetail WinnerDetail, Post, SubPost
    externalDocs:
      description: "Find out more"
      url: "http://localhost"
  - name: "post"
    description: "一對一的訂單討論區 結標通知order"
    externalDocs:
      description: "Find out more"
      url: "http://localhost"
  - name: "coupon"
    description: "查詢折價券資料" #Index: UserId
    externalDocs:
      description: "Find out more"
      url: "http://localhost"
  - name: "rate"
    description: "使用者評價公司, 詳細查詢用 admin api" #Index: UserId, CompanyId
    externalDocs:
      description: "Find out more"
      url: "http://localhost"
  - name: "company"
    description: "公司資料 新增營業登記證, 新增牌照"
    externalDocs:
      description: "Find out more"
      url: "http://localhost"
  - name: "admin"
    description: "管理層 審核 company的資料 查看評價"
    externalDocs:
      description: "Find out more"
      url: "http://localhost"
paths:
  # Verification 身分驗證
  /verifications:
    post:
      summary: "送出手機號碼"
      tags:
        - "verification"
      parameters: # 企業才有複雜的查詢訂單
        - in: query
          name: reset
          schema:
            type: boolean
            default: null
          description: 重設可以暫時通過檢測
      description: "送出手機號碼，會觸發簡訊發送影響扣款，需要處理 ip 問題"
      operationId: sendPhoneVerification
      security: 
        - bearerAuth: []
      requestBody:
        description: add user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerVerification'
            examples:
              testA:
                summary: 測試資料A(手機)
                value:
                  phone: "0987654321"
              testB:
                summary: 測試資料B(格式錯誤)
                value:
                  phone: "0987654321"
            # examples:
            #   testA:
            #     summary: 測試資料A
            #     value:
            #       name: "王智龍"
            #       gender: "male"
            #       phone: "0987654321"
            #       email: "abc@gmail.com"
            #       firebaseToken: "as78dt7asd8tasd78"
              
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
              example: 
                success: "0987654321"
                message: ""
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  '/verifications/verify':
    post:
      summary: "驗證手機號碼"
      tags:
        - "verification"
      description: "驗證手機號碼"
      operationId: sendCodeVerification
      security: 
        - bearerAuth: []
      requestBody:
        description: add user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerVerification'
            examples:
              testA:
                summary: 測試資料A(成功號碼)
                value:
                  phone: "+886987654321"
                  code: "878787"
              testB:
                summary: 測試資料B(錯誤號碼)
                value:
                  phone: "error"
            # examples:
            #   testA:
            #     summary: 測試資料A
            #     value:
            #       name: "王智龍"
            #       gender: "male"
            #       phone: "0987654321"
            #       email: "abc@gmail.com"
            #       firebaseToken: "as78dt7asd8tasd78"
              
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
              example: 
                success: "0987654321"
                message: ""
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
                
  # User 使用者
  /users:
    get:
      summary: 取得使用者資料
      tags:
        - "user"
      description: "取得使用者資料"
      operationId: getUserById
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUser'
              #   type: array
              #   items:
              #     $ref: '#/components/schemas/getUser'
              # examples:
              #   testA:
              #     summary: 測試資料A
              #     value:
              #       name: "王智龍"
              #       gender: "male"
              #       phone: "0987654321"
              #       email: "abc@gmail.com"
              #       invitaion: "876547"
              #       token: "%^&*()_+"
                    #firebaseToken: "as78dt7asd8tasd78"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: 新增使用者
      tags:
        - "user"
      description: "新增用戶"
      operationId: addUser
      requestBody:
        description: add user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerUserBody'
            examples:
              testA:
                summary: 測試資料A
                value:
                  name: "王智龍"
                  gender: "male"
                  phone: "0987654321"
                  password: "c87631234"
                  email: "abc@gmail.com"
                  firebaseToken: "as78dt7asd8tasd78"
              
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUser'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: "更新密碼/資料/FirebaseToken"
      tags:
        - "user"
      description: "更新Firebase token或資料或密碼"
      operationId: updateUserById
      requestBody:
        description: 更新資料
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateUserBody'
            examples:
              testA:
                summary: "測試資料A"
                value:
                  name: "王智龍"
                  oldPassword: "123"
                  newPassword: "456"
                  email: "abc@gmail.com"
                  phone: "0987654321"
                  firebaseToken: "as78dt7asd8tasd78"
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUser'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                msg: "unexpected error"
  '/users/reset':
    put:
      summary: "重設密碼"
      tags:
        - "user"
      description: "更新Firebase token或資料或密碼"
      operationId: resetUserByPhoneCode
      requestBody:
        description: 重設密碼
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resetUserPasswordBody'
            examples:
              testA:
                summary: "測試資料A"
                value:
                  password: "456"
                  #code: "123456" # 由verification處理成孤兒
                  phone: "0987654321"
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUser'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                msg: "unexpected error"
  '/users/login':
    post:
      summary: 使用者登入
      tags:
        - "user"
      description: "新增用戶"
      operationId: loginUser
      requestBody:
        description: login user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginUserBody'
            examples:
              testA:
                summary: 測試資料A
                value:
                  email: "abc@gmail.com"
                  password: "123456aa"
                  firebaseToken: "sa65drsa7867asr9asd678asd689asd"
              
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUser'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
                
  # Order 訂單         
  /orders:
    get:
      summary: "取得使用者自己所有的訂單/企業取得所有未指派訂單/不指定任何參數為指派中/管理員取得所有指派中的訂單"
      tags:
        - "order"
      parameters: # 企業才有複雜的查詢訂單
        - in: query
          name: offset
          schema:
            type: integer
            minimum: 0
            default: 0
          required: false
          description: "offset 企業任何狀況都用的到"
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          required: false
          description: "limit 最多幾筆"
        - in: query
          name: related # 這個參數打掉下面所有參數 也不用限制數量 因為會隨時間消失
          schema:
            type: boolean
            default: false
          required: false
          description: "是否追蹤中/討論過/已報價"
        - in: query
          name: city
          schema:
            type: array
            items:
              type: string
              enum: ["taipei_keelung", "taoyuan_hsinchu_miaoli", "taichung_changhua_nantou", "yunlin_chiayi_nantou",
              "kaohsiung_pingtung", "yilan_hualien_taitung", "other"]
          required: false
          description: "都市, 查詢未得標的訂單用 (追蹤或留言或報價都算)"
        - in: query
          name: type
          schema:
            type: array
            items:
              type: string
              enum: ["home", "company", "factory", "other"]
          required: false
          description: "搬遷遷出地類型"
        - in: query
          name: time
          schema:
            type: string
            enum: ["in_two_days", "weerk", "month", "aftermonth", "all"]
          required: false
          description: "時間選擇"
        - in: query
          name: timeSort
          schema:
            type: string
            enum: ["asc", "des"]
            default: "des"
          required: false
          description: "時間排序"
      responses:
        '200':
          description: 取得所有訂單
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/getOrdersForUser'
                  - $ref: '#/components/schemas/getUnSignedOrdersForCompany'
                  - $ref: '#/components/schemas/getSignedOrdersForCompany'
                  - $ref: '#/components/schemas/getSignedOrdersForAdmin'
              examples:
                getOrdersForUser:
                  summary: "取得使用者所有訂單資訊 user"
                  value:
                    - 
                      $ref: '#/components/schemas/getOrdersForUser/example/0'
                getUnSignedOrdersForCompany:
                  summary: "取得所有未指派中訂單資訊 company (參數)"
                  value:
                    - 
                      $ref: '#/components/schemas/getUnSignedOrdersForCompany/example/0'
                      
                getSignedOrdersForCompany:
                  summary: "取得所有指派中訂單資訊 company (僅基本參數)"
                  value:
                    - 
                      $ref: '#/components/schemas/getSignedOrdersForCompany/example/0'
                      
                getSignedOrdersForAdmin:
                  summary: "取得所有指派中訂單資訊 admin (僅基本參數)"
                  value:
                    - 
                      $ref: '#/components/schemas/getSignedOrdersForAdmin/example/0'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: 新增訂單
      tags:
        - "order"
      description: "新增用戶"
      operationId: addOrder
      requestBody:
        description: add user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerOrderForUserBody'
            # examples:
              # testA:
              #   summary: 測試資料A
              #   value:
              #     name: "王智龍"
              #     gender: "male"
              #     phone: "0987654321"
              #     email: "abc@gmail.com"
              #     firebaseToken: "as78dt7asd8tasd78"
              
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getOrderDetailById'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  '/orders/{orderId}':
    get:
      summary: "取得指定訂單 應有存取權限 Company沒指派人擁有存取權 Admin全權限"
      tags:
        - "order"
      parameters: # 企業才有複雜的查詢訂單
        - in: path
          name: orderId
          schema:
            type: string
          required: true
          description: '訂單編號'
      operationId: getOrderDetailById
      responses:
        '200':
          description: 取得指定訂單
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getOrderDetailById'
              examples:
                getOrdersForUser:
                  summary: "取得詳細訂單資訊"
                  value:
                    $ref: '#/components/schemas/getOrderDetailById/example'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: "更新指定訂單 User選擇廠商 Company可以更新Winner，其中的Worker可以修改推播,"
      tags: # 要根據 role 判斷可以更新的功能
        - "order"
      parameters:
        - in: path
          name: orderId
          schema:
            type: string
          required: true
          description: '訂單編號'
      operationId: updateOrderByOrderId
      requestBody:
        description: 更新資料
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/updateOrderForUserBody'
                - $ref: '#/components/schemas/updateOrderByOrderIdBody'
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getOrderDetailById'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                msg: "unexpected error"             

  '/orders/payment':
    post:
      summary: 付款
      tags:
        - "order"
      description: "需要包含是否使用優惠券(與開立發票?)"
      operationId: payOrder
      requestBody:
        description: 更新資料
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/paymentOrderForUserBody'
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                msg: "unexpected error"
  '/orders/beat/{companyId}':
    get:
      summary: 企業用來取得自己完工的訂單 企業/admin用
      tags:
        - "order"
      parameters:
        - in: path
          name: companyId
          schema:
            type: string
          required: true
          description: 公司id
        - in: query
          name: offset
          schema:
            type: integer
            minimum: 0
            default: 0
          required: false
          description: The number of items to skip before starting to collect the result set.
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          required: false
          description: The number of items to return.
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          required: false
          description: 起始範圍內的訂單.
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          required: false
          description: 結束範圍內的訂單.
      responses:
        '200':
          description: 取得所有訂單
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getBeatOrdersByCompanyId/properties'
              examples:
                getOrdersForUser:
                  summary: "取得完工的訂單 company"
                  value:
                    - 
                      $ref: '#/components/schemas/getBeatOrdersByCompanyId/example/0'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  # Post 貼文        
  '/posts/{postId}':
    get:
      summary: 取得特定文章詳細資訊
      tags:
        - "post"
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: post id
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPostById/properties'
              examples:
                getOrdersForUser:
                  summary: "取得貼文詳細資訊"
                  value:
                    $ref: '#/components/schemas/getPostById/example'
                # type: array
                # items:
                #   $ref: '#/components/schemas/getUser'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: 企業新增貼文
      tags:
        - "post"
      description: "新增貼文區"
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: post id
      operationId: add post
      requestBody:
        description: add user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newPostBodyById'
            
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPostById/properties'
              examples:
                getOrdersForUser:
                  summary: "取得貼文詳細資訊"
                  value:
                    $ref: '#/components/schemas/getPostById/example'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: 更新回文資料
      tags:
        - "post"
      description: "更新Firebase token或資料或密碼"
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: post id
      operationId: update post
      requestBody:
        description: 更新資料
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newCommentBodyByPostId'
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPostById/properties'
              examples:
                getOrdersForUser:
                  summary: "取得貼文詳細資訊"
                  value:
                    $ref: '#/components/schemas/getPostById/example'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                msg: "unexpected error"
    
    
  # 優惠券
  /coupons:
    get:
      summary: 取得所有優惠券
      tags:
        - "coupon"
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCoupons'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: "新增折價券號碼"
      tags:
        - "coupon"
      parameters:
        - in: path
          name: orderId
          schema:
            type: string
          required: true
          description: post id
      requestBody:
        description: 更新資料
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerCoupon'
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCoupons' # 回傳可使用的 coupon
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/coupons/invitation':
    post:
      summary: "新增邀請碼"
      tags:
        - "coupon"
      parameters:
        - in: path
          name: orderId
          schema:
            type: string
          required: true
          description: post id
      requestBody:
        description: 新增邀請碼
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerInvitation'
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCoupons'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  
  
                
  # 評價
  /rates:
    get:
      summary: 取得所有公司平均體星數評價 user/admin
      tags:
        - "rate"
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
            minimum: 0
            default: 0
          required: false
          description: The number of items to skip before starting to collect the result set.
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          required: false
          description: The number of items to return.
        - in: query
          name: order
          schema:
            type: integer
            minimum: 0
            maximum: 1
            default: 0
          required: false
          description: 排序
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRates'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  '/rates/{companyId}':
    get:
      summary: 取得特定公司所有評價 company用 admin用
      tags:
        - "rate"
      parameters:
        - in: path
          name: companyId
          schema:
            type: string
          required: true
          description: post id
        - in: query
          name: offset
          schema:
            type: integer
            minimum: 0
            default: 0
          required: false
          description: The number of items to skip before starting to collect the result set.
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          required: false
          description: The number of items to return.
        - in: query
          name: order
          schema:
            type: integer
            minimum: 0
            maximum: 1
            default: 0
          required: false
          description: 排序
      responses:
        '200':
          description: 查詢公司評價
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRatesByCompanyId'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  '/rates/order/{orderId}':
    post:
      summary: "讓使用者為訂單評價 user用"
      tags:
        - "rate"
      parameters:
        - in: path
          name: orderId
          schema:
            type: string
          required: true
          description: post id
      requestBody:
        description: 新增邀請碼
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerRateBodyByOrderId'
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success' # 回傳啥都可以
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/rates/d/{rateId}':
    delete:
      summary: "刪除特定的評價 admin用"
      tags:
        - "rate"
      parameters:
        - in: path
          name: rateId
          schema:
            type: string
          required: true
          description: post id
        - in: query
          name: offset
          schema:
            type: integer
            minimum: 0
            default: 0
          required: false
          description: The number of items to skip before starting to collect the result set.
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          required: false
          description: The number of items to return.
        - in: query
          name: order
          schema:
            type: integer
            minimum: 0
            maximum: 1
            default: 0
          required: false
          description: 排序
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success' # 回傳啥都可以
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'      
                
  # 企業
  /companys:
    get:
      summary: "取得公司自己的資訊/取得所有公司基本資訊 company/admin"
      tags:
        - "company"
      parameters: 
        - in: query
          name: offset
          schema:
            type: integer
            minimum: 0
            default: 0
          required: false
          description: The number of items to skip before starting to collect the result set.
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          required: false
          description: The number of items to return.
      responses:
        '200':
          description: 取得所公司資訊, admin 才有 query
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/getCompanyById'
                  - $ref: '#/components/schemas/getCompanysByAdmin'
              examples:
                getCompany:
                  summary: "取得公司自己的資訊 company"
                  value:
                    $ref: '#/components/schemas/getCompanyById/example'
                getCompanys:
                  summary: "取得所公司基本資訊 admin (參數)"
                  $ref: '#/components/examples/getCompanysByAdmin'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: "創建公司帳號"
      tags:
        - "company"
      parameters:
        - in: path
          name: orderId
          schema:
            type: string
          required: true
          description: post id
      requestBody:
        description: 創建公司帳號
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerCompanyBody'
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCompanyById'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: "更新營業登記證/公司基本資料 停權與否 company admin"
      tags:
        - "company"
      parameters:
        - in: path
          name: companyId # 因為 admin 要用 所以需要特定
          schema:
            type: string
          required: true
          description: "因為 admin 要用 所以需要特定"
      requestBody:
        description: "更新公司牌照/營業登記證/師傅身分證 停權與否 company admin"
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/updateCompanyAsCompanyBody'
                - $ref: '#/components/schemas/updateCompanyAsAdminBody'
            examples:
              updateCompany:
                summary: "更新公司自己的資訊 company"
                $ref: '#/components/examples/updateCompanyAsCompanyBody'
              updateCompanyAsAdmin:
                summary: "更新/審核所公司資訊 admin"
                $ref: '#/components/examples/updateCompanyAsAdminBody'
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCompanyById'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/companys/loginAsManager':
    post:
      summary: 公司登入
      tags:
        - "company"
      description: "公司用戶"
      operationId: loginCompanyAsManager
      requestBody:
        description: login company
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginCompanyAsManagerBody'
            examples:
              testA:
                summary: 測試資料A
                value:
                  #email: "abc@gmail.com"
                  taxNumber: "87654213" # 統編
                  password: "123456aa"
                  firebaseToken: "sa65drsa7867asr9asd678asd689asd"
              
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCompanyById'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/companys/loginAsWorker':
    post:
      summary: 員工登入
      tags:
        - "company"
      description: "公司用戶"
      operationId: loginCompanyAsWorker
      requestBody:
        description: login company
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginCompanyAsWorkerBody'
            examples:
              testA:
                summary: 測試資料A
                value:
                  #email: "abc@gmail.com"
                  taxNumber: "87654213" # 統編
                  password: "123456aa"
                  firebaseToken: "sa65drsa7867asr9asd678asd689asd"
              
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCompanyById'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  # 管理員 # 存款提款可以直接更新點數 檢視/刪除需求
  /admins: # 手機驗證交給 verification 寄送 code
    get: 
      summary: "取得管理員資訊"
      tags:
        - "admin"
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                properties:
                  #ip:
                  #  type: string
                  phone:
                    type: string
                  # token:
                  #   type: string
              example:
                # ip: "189.216.214.52"
                phone: "0987654321"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: "輸入簡訊號碼 登入管理員權限"
      tags:
        - "admin"
      requestBody:
        description: ""
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerAdminLoginBody'
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                properties:
                  ip:
                    type: string
                  phone:
                    type: string
                  token:
                    type: string
              example:
                ip: "189.216.214.52"
                phone: "0987654321"
                token: "A)(&*A(SKO"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: "修改管理員手機"
      tags:
        - "admin"
      requestBody:
        description: ""
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateAdminPhoneBody'
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAdmin'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
 
                
components:

  securitySchemes:
    #tokenAuth:        # arbitrary name for the security scheme
    #  type: apiKey
    #  description: token (Authentication token ...)
    #  in: header       # can be "header", "query" or "cookie"
    #  name: Authentication
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT 
  
  
  schemas:
    User:
      title: "User - 使用者Collection"
      required:
        - name
        - gender
        - phone
        - email
      properties:
        name:
          type: string
        gender:
          type: string
          enum: 
            - female
            - male
        phone:
          type: string # 不可重複
        email:
          type: string # 不可重複
        halt:
          type: string
        salt:
          type: string
        optionals:
          type: string
          
    Invitation: # 創建使用者順便創建這個
      title: "Invitation - 邀請碼Collection"
      properties:
        user:
          type: string
          format: ObjectId
        invitation: # 個人的邀請碼
          type: string
          format: ObjectId
        downstream:
          type: array # userIds
          items:
            type: string 
            format: ObjectId
        upstream:
          type: string # userId
          format: ObjectId
        companyStream:
          type: string # companyId
          format: ObjectId
          
    PhoneOrphanage: # 手機驗證的時候創建
      title: "PhoneOrphanage - 已驗證手機Collection"
      properties:
        phone:
          type: string
        expiredAt:
          type: string
          format: date
          
    Company: # 完全不知道有啥幹用...
      title: "Company - 公司資料Collection"
      required:
        - name
        - gender
        - phone
        - email
        - companyName
        - taxNumber
      properties:
        companyName:
          type: string
        taxNumber:
          type: string
        name:
          type: string
        gender:
          type: string
          enum: 
            - female
            - male
        phone:
          type: string
        email:
          type: string
        halt:
          type: string
        salt:
          type: string
        invitation:
          type: string
          
        companyPhone:
          type: string
        city:
          type: string
        area:
          type: string
        address:
          type: string
          
        # admin control
        accountStatus:
          type: string
          enum: 
            - unapproved
            - approvedError
            - stopRight
            - normal
        statusMsg:
          type: string
        # peopleIdentificationUrls:
        #   type: array
        #   items:
        #     type: string
        # carIdentificationUrls:
        #   type: array
        #   items:
        #     type: string
        companyIdentificationUrl: # 變成註冊後必須上傳
          type: string
        coin:
          type: integer
        coinRequests: # 儲值 匯款日期、匯款金額、匯款銀行、帳戶末五碼或存款人
          type: array
          items:
            type: object
            properties:
              #account:
              #  type: string
              date:
                type: string
                format: date
              price:
                type: number
              owner:
                type: string
        withdrawRequest: # 綁定銀行
          type: number
        bank:
          type: object
          properties:
            bank:
              type: string
            account:
              type: string
            name:
              type: string
            picture:
              type: string
        people:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              phone:
                type: string
              token:
                type: string
              pwd:
                type: string
        
    Order: # 訂單
      title: "Order - 訂單資料"
      properties:
        orderId:
          type: string
          format: objectId
        companyId: # 公司指派
          type: string
          format: objectId
          default: null
        companyOffset: # 驗收用
          type: number
          default: 0
        couponIds: # 驗收選擇用
          type: array
          items:
            $ref: '#/components/schemas/Coupon'
        userId: # 創建時
          type: string
          format: objectId
        postId: # 訂單處理時
          type: string
          format: objectId
          default: null
        rateId: # 最終跳出評價連結到訂單
          type: string
          format: objectId
          default: null
        traced: # untracable? 追蹤中 總體要從追蹤跟回答去產生最終追蹤結果
          type: array
          items: # companyId
            type: string
            format: objectId
        orderStatus:
          type: string
          enum: 
            - post # 剛創好的post問答階段
            - close # 取消訂單
            - process # 選擇了公司
            - complete # 付款完成 整筆交易結束
        #isComplete: # 最終完成交易時
          #type: boolean
          #default: false
        moveStatus: # 移動階段
          type: string
          enum:
            - none
            - start # 已指派師傅
            - nearlyStart # 即將抵達遷出
            - arriveStart # 抵達遷出
            - nearlyEnd # 即將抵達遷入
            - arriveEnd # 抵達遷入
            - complete # 完成搬遷通知使用者
        moveOut: # 重要的使用者輸入資料
          $ref: '#/components/schemas/MoveDetail'
        moveIn: # 重要的使用者輸入資料
          $ref: '#/components/schemas/MoveDetail'
        moveDate: # 重要的使用者輸入資料
          type: string
          format: date
        #actualDate: # 最終搬家業者決定的時間 在 Winner 裡面
        #  type: string
        #  format: date
        #  default: null
        rooms: # 重要的使用者輸入資料
          type: array
          items:
            $ref: '#/components/schemas/RoomDetail'
        roomRemark: # 重要的使用者輸入資料
          type: string
        isNeedBox: # 重要的使用者輸入資料
          type: boolean
          default: false
        winner: # 得標的公司 派遣資訊
          $ref: '#/components/schemas/WinnerDetail'
        paymentMethod:
          type: string
          enum: ["apple", "google", "money"]
          
    WinnerDetail:
      title: "WinnerDetail - 廠商提供 Order 資料 Part"
      properties:
        price:
          type: number
        principle: # 師傅名稱
          type: string
        date: # 搬遷日期
          type: string
          format: date
        carCount:
          type: integer
        peopleCount:
          type: integer
        phone: # 師傅電話
          type: string
    
    MoveDetail: # ChildSchemaOfOrder?
      title: "MoveDetail - 使用者提供 Order 資料 Part"
      properties:
        moveType:
          type: string
          enum:
            - home
            - company
            - factory
            - other
          default: home
        height:
          type: integer
        elevator:
          type: boolean
          default: false
        courtyard:
          type: boolean
          default: false
        distance:
          type: number
        terrain:
          type: object
          properties:
            terrainType:
              type: string
            description:
              type: string
        location:
          type: object
          properties:
            city:
              type: string
            area:
              type: string
            address:
              type: string
        contact:
          type: object
          properties:
            name:
              type: string
            phone:
              type: string
            gender:
              type: string
              enum: 
                - female
                - male
          
    RoomDetail:
      title: "RoomDetail - 使用者提供 Order 資料 Part"
      properties:
        roomName:
          type: string
        imgUrls:
          type: array
          items:
            type: string
        breakables:
          default: null
          type: array
          items:
            type: object
            properties:
              itemName:
                type: string
              count:
                type: integer
        throwables:
          default: null
          type: array
          items:
            type: object
            properties:
              itemName:
                type: string
              count:
                type: integer
    
    Post: # 又待討論了阿...
      title: "Post - 與 Order 一對一的討論區"
      properties:
        postId:
          type: string
          format: objectId
        #userId: # 用來通知用戶 firebase 通知更新 拔掉這個得找 order 拿 userId
          #type: string
          #format: objectId
        subPosts:
          type: array
          items:
            $ref: '#/components/schemas/SubPost'
        evaluations:
          type: array
          items:
            type: object
            properties:
              companyId:
                type: string
              cost:
                type: integer
              predictDays:
                type: integer
              content:
                type: string # 正規 3.5x1/1.5x0/.../內容
          
          
    SubPost:
      title: "SubPost - 討論區的企業貼文 Part"
      properties:
        companyId:
          type: string
        title:
          type: string
        date:
          type: string
          format: date
        content:
          type: string
        comments:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              content:
                type: integer
              createdAt:
                type: string
                format: date
    
    Coupon: # 系統根據新創帳號或完成交易或輸入邀請碼取得
      title: "Coupon - 折價券"
      properties:
        user:
          type: string
          format: ObjectId
        discount:
          type: integer
        createdAt:
          type: string
          format: date
        expiredAt:
          type: string
          format: date
          default: null
        couponCode:
          type: string
          maxLength: 9
        couponActivity:
          type: string
          enum:
            - newlyCreated # 新創
            - invited # 受邀請
            - companyInvited # 公司邀請
            - inviter # 邀請者
            - activity001 # 活動
          default: "activity001"
          
    Rate: #  order 創造
      title: "Rate - 評價資料"
      properties:
        rate:
          type: string
          format: ObjectId
        order:
          type: string
          format: ObjectId
        company:
          type: string
          format: ObjectId
        user:
          type: string
          format: ObjectId
        stars:
          type: array
          items:
            type: integer
        comment:
          type: string
    
    
    Notification: # Firebase 傳送通知用 創建任何用戶資料時新增 更新時修改
      title: "Notification - 使用者與Firebase綁定用"
      properties:
        user:
          type: string
          format: ObjectId
        company:
          type: string
        admin:
          type: string
        firebaseToken:
          type: string
    
    Verification: # 手機驗證, 限制 ip
      title: "Verification - 手機驗證"
      properties:
        ip:
          type: string
        code: # 6位數 # index
          type: string
          maxLength: 6
        tries:
          type: integer
        lastTry:
          type: string
          format: date
          
    Admin:
      title: "Admin - 管理員"
      properties:
        ip:
          type: string
        phone:
          type: string
          
    Error:
      title: "Error -失敗格式"
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
          
    Success:
      title: "Success -成功格式"
      required:
        - success
        - message
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    
    # 使用者
    getUser:
      properties:
        name:
          type: string
        gender:
          type: string
          enum: 
            - female
            - male
        phone:
          type: string # 不可重複
        email:
          type: string # 不可重複
        invitation: # 不可重複 6位數
          type: string
        token:
          type: string
      example:
        name: "王智龍"
        gender: "male"
        phone: "0987654321"
        email: "abc@gmail.com"
        invitaion: "876547"
        token: "%^&*()_+"
    
    registerUserBody:
      properties:
        name:
          type: string
        gender:
          type: string
          enum: 
            - female
            - male
        phone:
          type: string # 不可重複
        email:
          type: string # 不可重複
        password:
          type: string
          minLength: 8
        firebaseToken:
          type: string
      # response getUser
    
    updateUserBody:
      properties:
        name:
          type: string
        oldPassword:
          type: string
        newPassword:
          type: string
        email:
          type: string
        phone:
          type: string
        firebaseToken:
          type: string
      # response getUser
      
    resetUserPasswordBody:
      properties:
        phone:
          type: string
        #code:
        #  type: string #code: "123456" # 由verification處理成孤兒
        password:
          type: string
      # response getUser
      
    loginUserBody:
      properties:
        email:
          type: string
        password:
          type: string
          minLength: 8
        firebaseToken:
          type: string
          
    # 訂單
    getOrderDetailById:
      properties: # 使用者看自己所有的訂單 完不完成無所謂取消也要顯示
        schema:
          $ref: '#/components/schemas/Order'
      example:
        orderId: "%^_&D^&*S*(&T&D*A"
        companyId: "%^_&D^&*S*(&T&D*A"
        companyOffset: "-500"
        couponIds: # 驗收選擇用
          - "%^_&D^&*S*(&T&D*A"
        userId: "%^_&D^&*S*(&T&D*A"
        postId: "%^_&D^&*S*(&T&D*A"
        rateId: "%^_&D^&*S*(&T&D*A"
        orderStatus: "process"
        isComplete: true
        moveStatus: "onEnd"
        moveOut: # 重要的使用者輸入資料
          height: 20
          elevator: true
          courtyard: true
          distance: 80
          terrain:
            terrainType: "slope"
            description: "bad slope"
          location:
            city: "新北市"
            area: "板橋區"
            address: "鬼怪路八段899巷78號8樓"
          contact:
            name: "休比"
            phone: "0987654321"
            gender: "female"
        moveIn: # 重要的使用者輸入資料
          height: 20
          elevator: true
          courtyard: true
          distance: 80
          terrain:
            terrainType: "slope"
            description: "bad slope"
          location:
            city: "新北市"
            area: "板橋區"
            address: "鬼怪路八段899巷78號8樓"
          contact:
            name: "休比"
            phone: "0987654321"
            gender: "female"
        moveDate: "2018-08-24 12:00:78"
        rooms: # 重要的使用者輸入資料
          - 
            roomName: "神之房"
            imgUrls:
              - "http://imgur.com/abc"
              - "http://imgur.com/abc"
              - "http://imgur.com/abc"
            breakables:
              - 
                itemName: "分離式冷氣"
                count: 10
              - 
                itemName: "櫃子"
                count: 10
            throwables:
              - 
                itemName: "窗型冷氣"
                count: 10
              - 
                itemName: "桌子"
                count: 10
        roomRemark: "A房間有問題,B房間沒問題,C房間要消失"
        isNeedBox: true
        winner: # 得標的公司 派遣資訊
          principle: "林師父"
          date: "2018-08-24 12:00:78"
          carCount: 5
          peopleCount: 4
          phone: "0987654321"
            
    getOrdersForUser:
      properties: # 使用者看自己所有的訂單 完不完成無所謂取消也要顯示
        schema:
          type: array
          items:
            $ref: '#/components/schemas/Order'
      example:
        - $ref: '#/components/schemas/getOrderDetailById/example' # 暫時取得所有訂單詳細資訊 不知道未來變更
            
            
    getSignedOrdersForCompany: 
      properties: # 根據公司token 取得特定公司的指派中的 不包含已完成的
        schema:
          type: array
          items:
            $ref: '#/components/schemas/Order'
      example:
        - $ref: '#/components/schemas/getOrderDetailById/example'
        
    getSignedOrdersForAdmin: 
      properties: # Admin 取得指派中的 不包含已完成的
        schema:
          type: array
          items:
            $ref: '#/components/schemas/Order'
      example:
        - $ref: '#/components/schemas/getOrderDetailById/example'
        
    getUnSignedOrdersForCompany: 
      properties: # 搜索未指派的訂單用
        schema:
          type: array
          items:
            $ref: '#/components/schemas/Order'
      example:
        - $ref: '#/components/schemas/getOrderDetailById/example'
          
    getBeatOrdersByCompanyId: 
      properties: # 根據 Query 搜索範圍內完工的訂單, 預設取得近期前 10
        schema:
          type: array
          items:
            $ref: '#/components/schemas/Order'
      example:
        - $ref: '#/components/schemas/getOrderDetailById/example'
            
    registerOrderForUserBody:
      properties:
        userId: # 創建時
          type: string
          format: objectId
        moveOut: # 重要的使用者輸入資料
          $ref: '#/components/schemas/MoveDetail'
        moveIn: # 重要的使用者輸入資料
          $ref: '#/components/schemas/MoveDetail'
        moveDate: # 重要的使用者輸入資料
          type: string
          format: date
        rooms: # 重要的使用者輸入資料
          type: array
          items:
            $ref: '#/components/schemas/RoomDetail'
        roomRemark: # 重要的使用者輸入資料
          type: string
        isNeedBox: # 重要的使用者輸入資料
          type: boolean
          default: false
      example:
        userId: "%^_&D^&*S*(&T&D*A"
        moveOut: # 重要的使用者輸入資料
          height: 20
          elevator: true
          courtyard: true
          distance: 80
          terrain:
            terrainType: "slope"
            description: "bad slope"
          location:
            city: "新北市"
            area: "板橋區"
            address: "鬼怪路八段899巷78號8樓"
          contact:
            name: "休比"
            phone: "0987654321"
            gender: "female"
        moveIn: # 重要的使用者輸入資料
          height: 20
          elevator: true
          courtyard: true
          distance: 80
          terrain:
            terrainType: "slope"
            description: "bad slope"
          location:
            city: "新北市"
            area: "板橋區"
            address: "鬼怪路八段899巷78號8樓"
          contact:
            name: "休比"
            phone: "0987654321"
            gender: "female"
        moveDate: "2018-08-24 12:00:78"
        rooms: # 重要的使用者輸入資料
          - 
            roomName: "神之房"
            imgUrls:
              - "http://imgur.com/abc"
              - "http://imgur.com/abc"
              - "http://imgur.com/abc"
            breakables:
              - 
                itemName: "分離式冷氣"
                count: 10
              - 
                itemName: "櫃子"
                count: 10
            throwables:
              - 
                itemName: "窗型冷氣"
                count: 10
              - 
                itemName: "桌子"
                count: 10
        roomRemark: "A房間有問題,B房間沒問題,C房間要消失"
        isNeedBox: true
        # response getOrdersForUser
          
    updateOrderForUserBody:
      properties:
        orderId:
          type: string
          format: objectId
        companyId: # 公司指派
          type: string
          format: objectId
          default: null
      example:
        orderId: "%^_&D^&*S*(&T&D*A"
        companyId: "%^_&D^&*S*(&T&D*A"
      # response getOrdersForUser
    
    
    updateOrderByOrderIdBody: # company and worker
      properties:
        companyOffset: # worker
          type: number
        moveStatus: # worker
          type: string
          enum: ["start", "nearlyStart", "arriveStart", "nearlyEnd", "arriveEnd", "complete"]
        winner: # company
          type: object
          properties:
            price:
              type: number
            date: 
              type: string
              format: date
            principle: # 用這個綁定 worker
              type: string
            phone:
              type: string
            carCount:
              type: number
            peopleCount:
              type: number
      example:
        companyOffset: -500
        moveStatus: "nearlyStart"
        winner:
          price: 5000
          date: "2019/08/08 12:20:30"
          principle: "林師父"
          phone: "0987654321"
          carCount: 5
          peopleCount: 6
          
          
        
    paymentOrderForUserBody:
      properties:
        orderId:
          type: string
          format: objectId
        couponIds:
          type: array
          items:
            type: string
        paymentMethod:
          type: string
          enum: ["apple", "google", "money"]
        paymentToken: # Google Pay, Apple Pay
          type: string
      example:
        orderId: "A65as4654asd64asd654asd"
        couponIds:
          - "A65as4654asd64asd654asd"
          - "A65as4654asd64asd654asd"
        paymentMethod: "apple"
        paymentToken: "A65as4654asd64asd654asd"
    
    paymentOrderResponse:
      properties:
        orderId:
          type: string
          format: objectId
        success: # Google Pay, Apple Pay
          type: string
          
    getPostById:
      properties:
        schema:
          $ref: '#/components/schemas/Post'
      example:
        postId: "%^_&D^&*S*(&T&D*A"
        subPosts:
          -
            companyId: "%^_&D^&*S*(&T&D*A"
            title: "543搬家公司"
            date: "2017/06/30 18:00:32"
            content: "評估沒問題會直接報價不用回復"
            comments:
              -
                name: "神"
                content: "123"
                createdAt: "2017/06/30 18:00:32"
              -
                name: "商店"
                content: "456"
                createdAt: "2017/06/30 18:00:32"
        evaluations:
          -
            companyId: "%^_&D^&*S*(&T&D*A"
            cost: 8000
            responseTime: "2017/06/30 18:00:32"
            content: "Pay more!"
          -
            companyId: "%^_&D^&*S*(&T&D*A"
            cost: 7000
            responseTime: "2017/06/31 18:00:32"
            content: "Pay more!"
        
    newPostBodyById: # 資料庫多記一筆 createdAt
      properties:
        title:
          type: string
        content:
          type: string
      example:
        title: "鬼之企業"
        content: "你爸大內容"
      # response getPostById  
          
    newCommentBodyByPostId: # 需要確認企業不能回其他區文章
      properties:
        name:
          type: string # 不記錄 userId 改記名字而已
        content:
          type: integer
      example:
        name: "休比"
        content: "機鎧種等待執行命令"
      # response getPostById  
      
    getCoupons:
      properties:
        schema:
          type: array
          items:
            $ref: '#/components/schemas/Coupon'
      example:
        -
          couponId: "%^_&D^&*S*(&T&D*A"
          userId: "%^_&D^&*S*(&T&D*A"
          discount: 200
          createdAt: "2017/06/31 18:00:32"
          expireAt: "2017/06/31 18:00:32"
          couponType: "default"
        -
          couponId: "%^_&D^&*S*(&T&D*A"
          userId: "%^_&D^&*S*(&T&D*A" # null in Coupon stage, If no user binding
          discount: 600
          createdAt: "2017/06/31 18:00:32"
          expireAt: "2017/06/31 18:00:32"
          couponType: "special"
            
    registerCoupon: # 新增折價券
      properties:
        couponId:
          type: string
      example:
        couponId: "%^_&D^&*S*(&T&D*A"
      # reponse getCoupons
    
    registerInvitation: # 新增邀請碼
      properties:
        invitation:
          type: string
      example:
        invitation: "878787"
        # reponse getInvitations
        # reponse getCoupons
    
    getRates: # 平均評價
      properties:
        schema:
          type: array
          items:
            type: object
            properties:
              companyId: # 以 Compoany 為整合的平均星數
                type: string
              avgStar:
                type: array
                items:
                  type: integer
      example:
        -
          companyId: "%^_&D^&*S*(&T&D*A"
          avgStar: [1, 2, 3, 4, 5]
        -
          companyId: "%^_&D^&*S*(&T&D*A"
          avgStar: [1, 2, 3, 4, 5]
          
    
    getRatesByCompanyId:
      properties:
        schema:
          type: array
          items:
            $ref: '#/components/schemas/Rate'
      example:
        -
          rateId: "%^_&D^&*S*(&T&D*A"
          orderId: "%^_&D^&*S*(&T&D*A"
          companyId: "%^_&D^&*S*(&T&D*A"
          userId: "%^_&D^&*S*(&T&D*A"
          stars: [1, 2, 3, 4, 5]
          comment: "爛公司"
        -
          rateId: "%^_&D^&*S*(&T&D*A"
          orderId: "%^_&D^&*S*(&T&D*A"
          companyId: "%^_&D^&*S*(&T&D*A"
          userId: "%^_&D^&*S*(&T&D*A"
          stars: [1, 2, 3, 4, 5]
          comment: "好公司"
            
            
    registerRateBodyByOrderId:
      properties:
        rateId:
          type: string
        stars:
          type: array
          items:
            type: integer
        comment:
          type: string
      example:
        rateId: "%^_&D^&*S*(&T&D*A"
        stars: [1, 2, 3, 4, 5]
        comment: "爛公司"
      # response getRatesByCompanyId (其實回傳什麼都可以)
    
    deleteRateByRateIdResponse:
      properties:
        schema:
          type: array
          items:
            $ref: '#/components/schemas/Rate' 
      # response getRatesByCompanyId (其實回傳什麼都可以)
      
      
    getCompanyById:
      properties:
        # companyId:
        #   type: string
        companyName:
          type: string
        taxNumber:
          type: string
        name:
          type: string
        gender:
          type: string
          enum: 
            - female
            - male
        phone:
          type: string
        email:
          type: string
        token:
          type: string
        companyPhone:
          type: string
        city:
          type: string
        area:
          type: string
        address:
          type: string
        invitation:
          type: string
        accountStatus:
          type: string
          enum: [ "unapproved", "approvedError", "stopRight", "normal" ]
        statusMsg:
          type: string
        # peopleIdentificationUrls:
        #   type: array
        #   items:
        #     type: string
        # carIdentificationUrls:
        #   type: array
        #   items:
        #     type: string
        companyIdentificationUrl:
          type: string
        coin:
          type: integer
        coinRequests:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
              price:
                type: number
              owner:
                type: string
        withdrawRequest:
          type: number
        bank:
          type: object
          properties:
            bank: 
              type: string
            account: 
              type: string
            name: 
              type: string
            picture: 
              type: string
        
      example:
        companyName: "機鍇種有限股份公司"
        taxNumber: "87965437"
        name: "休比"
        gender: "female"
        phone: "0987654321"
        email: "shubi"
        token: "%^&*U(A{SMNJA*)(H_"
        companyPhone: "0225645321"
        city: "新北市"
        area: "中山區"
        address: "鬼神路八段8號7樓"
        invitation: "Z879657" # 隨機7碼 或 26 * 隨機六碼
        accountStatus: "normal"
        statusMsg: ""
        # peopleIdentificationUrls:
        #   - "http://imgur.com/abc"
        #   - "http://imgur.com/abc"
        #   - "http://imgur.com/abc"
        #   - "http://imgur.com/abc"
        # carIdentificationUrls:
        #   - "http://imgur.com/abc"
        #   - "http://imgur.com/abc"
        #   - "http://imgur.com/abc"
        #   - "http://imgur.com/abc"
        companyIdentificationUrl:
          - "http://imgur.com/abc"
        coin: 81000
        coinRequests:
          - date: "2018/02/30 12:30:40"
            price: 500
            owner: "神手存款人墨舞碼88888"
          - date: "2018/02/30 12:30:40"
            price: 5200
            owner: "神手存款人墨舞碼88888"
          - date: "2018/02/30 12:30:40"
            price: 4800
            owner: "神手存款人墨舞碼88888"
        withdrawRequest: 800
        bank:
          bank: "花旗銀行"
          account: "4321123443211234"
          name: "神手的戶名"
          picture: "http://imgur.com/87654"
    
    getWorkerById:
      properties:
        name:
          type: string
        orders: # winner 裡面的 principle 與確認 companyId 與確認完結狀態
          type: array
          items:
            $ref: '#/components/schemas/Order'
            
          
    
        
    getCompanysByAdmin:
      properties:
        schema:
          type: array
          items:
            $ref: "#/components/schemas/getCompanyById"
    
    registerCompanyBody:
      properties:
        companyName:
          type: string
        companyId:
          type: string
        name:
          type: string
        gender:
          type: string
          enum: 
            - female
            - male
        phone:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        companyName: "機鍇種有限股份公司"
        companyId: "87965437"
        name: "休比"
        gender: "female"
        phone: "0987654321"
        email: "shubi"
        password: "C8763"
          
    updateCompanyAsCompanyBody:
      properties:
        name:
          type: string
        gender:
          type: string
          enum: 
            - female
            - male
        email:
          type: string
        # 下面三個會需要重新審核
        # peopleIdentificationUrls:
        #   type: array
        #   items:
        #     type: string
        # carIdentificationUrls:
        #   type: array
        #   items:
        #     type: string
        city:
          type: string
        area:
          type: string
        address:
          type: string
        coinRequest: #單數 需求 # 資料庫是複數 coinRequests 但這邊只能新增不給刪除
          type: object
          properties: 
              date:
                type: string
                format: date
              price:
                type: number
              owner:
                type: string
        withdrawRequest:
          type: number
        bank: # 一次傳全部 修改全部
          type: object
          properties:
            bank:
              type: string
            account:
              type: string
            name:
              type: string
            picture:
              type: string
        people: # 一次傳全部 修改全部
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              phone:
                type: string
              firebaseToken: # 登入才能取得
                type: string
              pwd:
                type: string
        companyIdentificationUrl:
          type: string
      example:
        name: "休比"
        gender: "female"
        email: "shubi"
        city: "新北市"
        area: "新店區"
        address: "神鬼路8段7號6樓"
        coinRequest: #單數 需求 # 資料庫是複數 coinRequests 
            date: "2018/02/30 12:30:40"
            price: 500
            owner: "神手存款人墨舞碼88888"
        withdrawRequest: 500
        bank:
          - 
            bank: "富邦銀行"
            account: "0987654321234567890"
            name: "鬼神公司"
            picture: "http://imgur.com/b/abcdefg"
        people:
          - 
            name: "小林師傅"
            phone: "0987654321"
            pwd: "a87654321"
            # token: "A^&A*&^A&TDT)A&" # 也許在別的地方做?
        companyIdentificationUrl: "http://imgur.com/asklasfjlkfjas"
        # peopleIdentificationUrls:
        #   - "http://imgur.com/abc"
        #   - "http://imgur.com/abc"
        #   - "http://imgur.com/abc"
        #   - "http://imgur.com/abc"
        # carIdentificationUrls:
        #   - "http://imgur.com/abc"
        #   - "http://imgur.com/abc"
        #   - "http://imgur.com/abc"
        #   - "http://imgur.com/abc"
          
    loginCompanyAsManagerBody:
      properties:
        email:
          type: string
        password:
          type: string
          minLength: 8
        firebaseToken:
          type: string
    loginCompanyAsWorkerBody:
      properties:
        taxNumber:
          type: string
        password:
          type: string
          minLength: 8
        firebaseToken:
          type: string
          
    updateCompanyAsAdminBody:
      properties:
        companyId:
          type: string
        companyName:
          type: string
        taxNumber:
          type: string
        name:
          type: string
        gender:
          type: string
          enum: 
            - female
            - male
        phone:
          type: string
        email:
          type: string
        password:
          type: string
        accountStatus:
          type: string
          enum: 
            - unapproved
            - approvedError
            - stopRight
            - normal
        statusMsg:
          type: string
        companyPhone:
          type: string
        city:
          type: string
        area:
          type: string
        address:
          type: string
        companyIdentificationUrl: # 變成註冊後必須上傳
          type: string
        coin:
          type: integer
        coinRequests: # 儲值 匯款日期、匯款金額、匯款銀行、帳戶末五碼或存款人
          type: array
          items:
            type: object
            properties:
              #account:
              #  type: string
              date:
                type: string
                format: date
              price:
                type: number
              owner:
                type: string
        withdrawRequest: # 綁定銀行
          type: number
      example:
        companyId: "8787878784654654"
        companyName: "機鍇種有限股份公司"
        taxNumber: "87965437"
        name: "休比"
        gender: "female"
        phone: "0987654321"
        email: "shubi"
        token: "%^&*U(A{SMNJA*)(H_"
        companyPhone: "0225645321"
        city: "新北市"
        area: "中山區"
        address: "鬼神路八段8號7樓"
        invitation: "Z879657" # 隨機7碼 或 26 * 隨機六碼
        accountStatus: "unapproved"
        statusMsg: ""
        companyIdentificationUrl:
          - "http://imgur.com/abc"
        coin: 81000
        coinRequests:
          - date: "2018/02/30 12:30:40"
            price: 500
            owner: "神手存款人墨舞碼88888"
          - date: "2018/02/30 12:30:40"
            price: 5200
            owner: "神手存款人墨舞碼88888"
          - date: "2018/02/30 12:30:40"
            price: 4800
            owner: "神手存款人墨舞碼88888"
        withdrawRequest: 800
          
    registerCompanyCoinBody:
      properties:
        paymentToken:
          type: string
      example:
        paymentToken: "%&^*()T*()**"
          
    getAdmin:
      properties:
        # schema:
        #   $ref: '#/components/schemas/Admin'
        ip:
          type: string
        phone:
          type: string
    
    registerAdminLoginBody:
      properties:
        verificationCode:
          type: string
      example:
        verificationCode: "aswd46"
      # response getAdmin
    
    updateAdminPhoneBody:
      properties:
        #verificationCode:
        #  type: string
        phone:
          type: string
      example:
        phone: "0987654321"
      # response getAdmin
      
    registerVerification:
      properties:
        #verificationCode:
        #  type: string
        phone:
          type: string
      example:
        phone: "0987654321"
        
        
  examples: # examples 會有 $$ref 問題 需要在這邊使用...
    getCompanysByAdmin: # use case for examples.
      summary: "取得所公司基本資訊 admin (參數)"
      value:
      -
        companyId: "8787878784654654"
        companyName: "機鍇種有限股份公司"
        taxNumber: "87965437"
        name: "休比"
        gender: "female"
        phone: "0987654321"
        email: "shubi"
        token: "%^&*U(A{SMNJA*)(H_"
        companyPhone: "0225645321"
        city: "新北市"
        area: "中山區"
        address: "鬼神路八段8號7樓"
        invitation: "Z879657" # 隨機7碼 或 26 * 隨機六碼
        accountStatus: "unapproved"
        statusMsg: ""
        companyIdentificationUrl:
          - "http://imgur.com/abc"
        coin: 81000
        coinRequests:
          - date: "2018/02/30 12:30:40"
            price: 500
            owner: "神手存款人墨舞碼88888"
          - date: "2018/02/30 12:30:40"
            price: 5200
            owner: "神手存款人墨舞碼88888"
          - date: "2018/02/30 12:30:40"
            price: 4800
            owner: "神手存款人墨舞碼88888"
        withdrawRequest: 800
        bank:
          bank: "花旗銀行"
          account: "4321123443211234"
          name: "神手的戶名"
          picture: "http://imgur.com/87654"
      -
        companyId: "8787878784654654"
        companyName: "機鍇種有限股份公司"
        taxNumber: "87965437"
        name: "休比"
        gender: "female"
        phone: "0987654321"
        email: "shubi"
        token: "%^&*U(A{SMNJA*)(H_"
        companyPhone: "0225645321"
        city: "新北市"
        area: "中山區"
        address: "鬼神路八段8號7樓"
        invitation: "Z879657" # 隨機7碼 或 26 * 隨機六碼
        accountStatus: "approvedError"
        statusMsg: ""
        companyIdentificationUrl:
          - "http://imgur.com/abc"
        coin: 81000
        coinRequests:
          - date: "2018/02/30 12:30:40"
            price: 500
            owner: "神手存款人墨舞碼88888"
          - date: "2018/02/30 12:30:40"
            price: 5200
            owner: "神手存款人墨舞碼88888"
          - date: "2018/02/30 12:30:40"
            price: 4800
            owner: "神手存款人墨舞碼88888"
        withdrawRequest: 800
        bank:
          bank: "花旗銀行"
          account: "4321123443211234"
          name: "神手的戶名"
          picture: "http://imgur.com/87654"
      -
        companyId: "8787878784654654"
        companyName: "機鍇種有限股份公司"
        taxNumber: "87965437"
        name: "休比"
        gender: "female"
        phone: "0987654321"
        email: "shubi"
        token: "%^&*U(A{SMNJA*)(H_"
        companyPhone: "0225645321"
        city: "新北市"
        area: "中山區"
        address: "鬼神路八段8號7樓"
        invitation: "Z879657" # 隨機7碼 或 26 * 隨機六碼
        accountStatus: "normal"
        statusMsg: ""
        companyIdentificationUrl:
          - "http://imgur.com/abc"
        coin: 81000
        coinRequests:
          - date: "2018/02/30 12:30:40"
            price: 500
            owner: "神手存款人墨舞碼88888"
          - date: "2018/02/30 12:30:40"
            price: 5200
            owner: "神手存款人墨舞碼88888"
          - date: "2018/02/30 12:30:40"
            price: 4800
            owner: "神手存款人墨舞碼88888"
        withdrawRequest: 800
        bank:
          bank: "花旗銀行"
          account: "4321123443211234"
          name: "神手的戶名"
          picture: "http://imgur.com/87654"
      -
        companyId: "8787878784654654"
        companyName: "機鍇種有限股份公司"
        taxNumber: "87965437"
        name: "休比"
        gender: "female"
        phone: "0987654321"
        email: "shubi"
        token: "%^&*U(A{SMNJA*)(H_"
        companyPhone: "0225645321"
        city: "新北市"
        area: "中山區"
        address: "鬼神路八段8號7樓"
        invitation: "Z879657" # 隨機7碼 或 26 * 隨機六碼
        accountStatus: "stopRight"
        statusMsg: ""
        companyIdentificationUrl:
          - "http://imgur.com/abc"
        coin: 81000
        coinRequests:
          - date: "2018/02/30 12:30:40"
            price: 500
            owner: "神手存款人墨舞碼88888"
          - date: "2018/02/30 12:30:40"
            price: 5200
            owner: "神手存款人墨舞碼88888"
          - date: "2018/02/30 12:30:40"
            price: 4800
            owner: "神手存款人墨舞碼88888"
        withdrawRequest: 800
        bank:
          bank: "花旗銀行"
          account: "4321123443211234"
          name: "神手的戶名"
          picture: "http://imgur.com/87654"
    updateCompanyAsCompanyBody:
      summary: "更新公司自己的資訊 company"
      value:
        name: "休比"
        gender: "female"
        email: "shubi"
        city: "新北市"
        area: "新店區"
        address: "神鬼路8段7號6樓"
        coinRequest: #單數 需求 # 資料庫是複數 coinRequests 
            date: "2018/02/30 12:30:40"
            price: 500
            owner: "神手存款人墨舞碼88888"
        withdrawRequest: 500
        bank:
          - 
            bank: "富邦銀行"
            account: "0987654321234567890"
            name: "鬼神公司"
            picture: "http://imgur.com/b/abcdefg"
        people:
          - 
            name: "小林師傅"
            phone: "0987654321"
            pwd: "a87654321"
            # token: "A^&A*&^A&TDT)A&" # 也許在別的地方做?
        companyIdentificationUrl: "http://imgur.com/asklasfjlkfjas"
        
        
    updateCompanyAsAdminBody:
      summary: "更新/審核所公司資訊 admin"
      value:
        companyId: "8787878784654654"
        companyName: "機鍇種有限股份公司"
        taxNumber: "87965437"
        name: "休比"
        gender: "female"
        phone: "0987654321"
        email: "shubi"
        token: "%^&*U(A{SMNJA*)(H_"
        companyPhone: "0225645321"
        city: "新北市"
        area: "中山區"
        address: "鬼神路八段8號7樓"
        invitation: "Z879657" # 隨機7碼 或 26 * 隨機六碼
        accountStatus: "unapproved"
        statusMsg: ""
        companyIdentificationUrl:
          - "http://imgur.com/abc"
        coin: 81000
        coinRequests:
          - date: "2018/02/30 12:30:40"
            price: 500
            owner: "神手存款人墨舞碼88888"
          - date: "2018/02/30 12:30:40"
            price: 5200
            owner: "神手存款人墨舞碼88888"
          - date: "2018/02/30 12:30:40"
            price: 4800
            owner: "神手存款人墨舞碼88888"
        withdrawRequest: 800
        